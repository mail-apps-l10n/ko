<!ENTITY itemPhishing.label "메일 사칭">
<!ENTITY itemPasswords.label "암호">
<!ENTITY itemAntiVirus.label "백신">
<!ENTITY phishingDetector1.intro "&brandShortName;는 수신자를 속이기 위한 일반적인 기술을 이용한 메일 사칭을 분석할 수 있습니다.">
<!ENTITY enablePhishingDetector1.label "읽은 메시지가 사기 메일으로 판단되면 알림">
<!ENTITY enablePhishingDetector1.accesskey "e">
<!ENTITY useDownloadedList.label "다운로드 사기 메일 리스트 사용">
<!ENTITY useDownloadedList.accesskey "U">
<!ENTITY savedPasswords.intro "&brandShortName;는 반복해서 로그인을 할 필요가 없도록 모든 계정의 암호 정보를 저장할 수 있습니다.">
<!ENTITY encryptEnabled.label "기본 암호로 사용할 암호를 암호화하여 저장">
<!ENTITY encryptEnabled.accesskey "s">
<!ENTITY masterPassword.intro "이 설정을 하면 기본 암호는 모든 암호를 보호하게 됩니다. 단, 세션당 한 번만 로그인 해야 합니다.">
<!ENTITY setMasterPassword.label "기본 암호">
<!ENTITY setMasterPassword.accesskey "M">
<!ENTITY removeMasterPassword.label "기본 암호 제거...">
<!ENTITY removeMasterPassword.accesskey "R">
<!ENTITY editPasswords.label "저장된 암호 수정">
<!ENTITY editPasswords.accesskey "i">
<!ENTITY antiVirus.intro "&brandShortName;는 메시지가 로컬에 저장되기 전 메일에 포함된 바이러스를 확인하기 위해 백신 프로그램이 접근하도록 설정할 수 있습니다.">
<!ENTITY antiVirus.label "백신 프로그램 접근 허가">
<!ENTITY antiVirus.accesskey "l">
<!ENTITY itemJunk.label "스팸">
<!ENTITY junkMail.intro "스팸 메일에 대한 기본 설정을 합니다. 계정 설정에서 계정에 대한 스팸 메일 설정을 할 수 있습니다.">
<!ENTITY manualMark.label "스팸 메일 처리할 경우 다음 기능 수행:">
<!ENTITY manualMarkModeMove.label "메시지를 &quot;스팸 폴더&quot;로 이동">
<!ENTITY markAsReadOnSpam.label "스팸으로 판명된 메일을 읽은 메일로 표시">
<!ENTITY manualMarkModeDelete.label "메시지 바로 삭제">
<!ENTITY enableJunkLogging.label "스팸 필터 기록 사용">
<!ENTITY enableJunkLogging.accesskey "g">
<!ENTITY openJunkLog.label "기록 보기">
<!ENTITY openJunkLog.accesskey "h">
<!ENTITY resetTrainingData.label "필터 초기화">
<!ENTITY resetTrainingData.accesskey "D">
<!ENTITY manualMark.accesskey "W">
<!ENTITY manualMarkModeMove.accesskey "o">
<!ENTITY manualMarkModeDelete.accesskey "t">
<!ENTITY markAsReadOnSpam.accesskey "k">
